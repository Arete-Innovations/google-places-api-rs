use serde::{Deserialize, Serialize};

#[derive(Debug, Copy, Eq, PartialEq, Hash, Clone, Serialize, Deserialize)]
pub enum PlaceTypes {
    //Table 1 lists the types that are supported for place searches, 
    //and can be returned with Place details results, and as part of autocomplete place predictions.
    Accounting,
    Airport,
    AmusementPark,
    Aquarium,
    ArtGallery,
    Atm,
    Bakery,
    Bank,
    Bar,
    BeautySalon,
    BicycleStore,
    BookStore,
    BowlingAlley,
    BusStation,
    Cafe,
    Campground,
    CarDealer,
    CarRental,
    CarRepair,
    CarWash,
    Casino,
    Cemetery,
    Church,
    CityHall,
    ClothingStore,
    ConvenienceStore,
    Courthouse,
    Dentist,
    DepartmentStore,
    Doctor,
    Drugstore,
    Electrician,
    ElectronicsStore,
    Embassy,
    FireStation,
    Florist,
    FuneralHome,
    FurnitureStore,
    GasStation,
    Gym,
    HairCare,
    HardwareStore,
    HinduTemple,
    HomeGoodsStore,
    Hospital,
    InsuranceAgency,
    JewelryStore,
    Laundry,
    Lawyer,
    Library,
    LightRailStation,
    LiquorStore,
    LocalGovernmentOffice,
    Locksmith,
    Lodging,
    MealDelivery,
    MealTakeaway,
    Mosque,
    MovieRental,
    MovieTheater,
    MovingCompany,
    Museum,
    NightClub,
    Painter,
    Park,
    Parking,
    PetStore,
    Pharmacy,
    Physiotherapist,
    Plumber,
    Police,
    PostOffice,
    PrimarySchool,
    RealEstateAgency,
    Restaurant,
    RoofingContractor,
    RvPark,
    School,
    SecondarySchool,
    ShoeStore,
    ShoppingMall,
    Spa,
    Stadium,
    Storage,
    Store,
    SubwayStation,
    Supermarket,
    Synagogue,
    TaxiStand,
    TouristAttraction,
    TrainStation,
    TransitStation,
    TravelAgency,
    University,
    VeterinaryCare,
    Zoo,

    //Table 2 lists additional types that can be returned with Place details results, 
    //and as part of autocomplete place predictions.
    AdministrativeAreaLevel1,
    AdministrativeAreaLevel2,
    AdministrativeAreaLevel3,
    AdministrativeAreaLevel4,
    AdministrativeAreaLevel5,
    AdministrativeAreaLevel6,
    AdministrativeAreaLevel7,
    Archipelago,
    ColloquialArea,
    Continent,
    Country,
    Establishment,
    Finance,
    Floor,
    Food,
    GeneralContractor,
    Geocode,
    Health,
    Intersection,
    Landmark,
    Locality,
    NaturalFeature,
    Neighborhood,
    PlaceOfWorship,
    PlusCode,
    PointOfInterest,
    Political,
    PostBox,
    PostalCode,
    PostalCodePrefix,
    PostalCodeSuffix,
    PostalTown,
    Premise,
    Room,
    Route,
    StreetAddress,
    StreetNumber,
    Sublocality,
    SublocalityLevel1,
    SublocalityLevel2,
    SublocalityLevel3,
    SublocalityLevel4,
    SublocalityLevel5,
    Subpremise,
    TownSquare,

    //Table 3 lists types you can use in place autocomplete requests.
    Address,
    Regions,
    Cities,
}

impl PlaceTypes {
    pub fn as_str(&self) -> &'static str {
        match self {
            PlaceTypes::Accounting => "accounting",
            PlaceTypes::Airport => "airport",
            PlaceTypes::AmusementPark => "amusement_park",
            PlaceTypes::Aquarium => "aquarium",
            PlaceTypes::ArtGallery => "art_gallery",
            PlaceTypes::Atm => "atm",
            PlaceTypes::Bakery => "bakery",
            PlaceTypes::Bank => "bank",
            PlaceTypes::Bar => "bar",
            PlaceTypes::BeautySalon => "beauty_salon",
            PlaceTypes::BicycleStore => "bicycle_store",
            PlaceTypes::BookStore => "book_store",
            PlaceTypes::BowlingAlley => "bowling_alley",
            PlaceTypes::BusStation => "bus_station",
            PlaceTypes::Cafe => "cafe",
            PlaceTypes::Campground => "campground",
            PlaceTypes::CarDealer => "car_dealer",
            PlaceTypes::CarRental => "car_rental",
            PlaceTypes::CarRepair => "car_repair",
            PlaceTypes::CarWash => "car_wash",
            PlaceTypes::Casino => "casino",
            PlaceTypes::Cemetery => "cemetery",
            PlaceTypes::Church => "church",
            PlaceTypes::CityHall => "city_hall",
            PlaceTypes::ClothingStore => "clothing_store",
            PlaceTypes::ConvenienceStore => "convenience_store",
            PlaceTypes::Courthouse => "courthouse",
            PlaceTypes::Dentist => "dentist",
            PlaceTypes::DepartmentStore => "department_store",
            PlaceTypes::Doctor => "doctor",
            PlaceTypes::Drugstore => "drugstore",
            PlaceTypes::Electrician => "electrician",
            PlaceTypes::ElectronicsStore => "electronics_store",
            PlaceTypes::Embassy => "embassy",
            PlaceTypes::FireStation => "fire_station",
            PlaceTypes::Florist => "florist",
            PlaceTypes::FuneralHome => "funeral_home",
            PlaceTypes::FurnitureStore => "furniture_store",
            PlaceTypes::GasStation => "gas_station",
            PlaceTypes::Gym => "gym",
            PlaceTypes::HairCare => "hair_care",
            PlaceTypes::HardwareStore => "hardware_store",
            PlaceTypes::HinduTemple => "hindu_temple",
            PlaceTypes::HomeGoodsStore => "home_goods_store",
            PlaceTypes::Hospital => "hospital",
            PlaceTypes::InsuranceAgency => "insurance_agency",
            PlaceTypes::JewelryStore => "jewelry_store",
            PlaceTypes::Laundry => "laundry",
            PlaceTypes::Lawyer => "lawyer",
            PlaceTypes::Library => "library",
            PlaceTypes::LightRailStation => "light_rail_station",
            PlaceTypes::LiquorStore => "liquor_store",
            PlaceTypes::LocalGovernmentOffice => "local_government_office",
            PlaceTypes::Locksmith => "locksmith",
            PlaceTypes::Lodging => "lodging",
            PlaceTypes::MealDelivery => "meal_delivery",
            PlaceTypes::MealTakeaway => "meal_takeaway",
            PlaceTypes::Mosque => "mosque",
            PlaceTypes::MovieRental => "movie_rental",
            PlaceTypes::MovieTheater => "movie_theater",
            PlaceTypes::MovingCompany => "moving_company",
            PlaceTypes::Museum => "museum",
            PlaceTypes::NightClub => "night_club",
            PlaceTypes::Painter => "painter",
            PlaceTypes::Park => "park",
            PlaceTypes::Parking => "parking",
            PlaceTypes::PetStore => "pet_store",
            PlaceTypes::Pharmacy => "pharmacy",
            PlaceTypes::Physiotherapist => "physiotherapist",
            PlaceTypes::Plumber => "plumber",
            PlaceTypes::Police => "police",
            PlaceTypes::PostOffice => "post_office",
            PlaceTypes::PrimarySchool => "primary_school",
            PlaceTypes::RealEstateAgency => "real_estate_agency",
            PlaceTypes::Restaurant => "restaurant",
            PlaceTypes::RoofingContractor => "roofing_contractor",
            PlaceTypes::RvPark => "rv_park",
            PlaceTypes::School => "school",
            PlaceTypes::SecondarySchool => "secondary_school",
            PlaceTypes::ShoeStore => "shoe_store",
            PlaceTypes::ShoppingMall => "shopping_mall",
            PlaceTypes::Spa => "spa",
            PlaceTypes::Stadium => "stadium",
            PlaceTypes::Storage => "storage",
            PlaceTypes::Store => "store",
            PlaceTypes::SubwayStation => "subway_station",
            PlaceTypes::Supermarket => "supermarket",
            PlaceTypes::Synagogue => "synagogue",
            PlaceTypes::TaxiStand => "taxi_stand",
            PlaceTypes::TouristAttraction => "tourist_attraction",
            PlaceTypes::TrainStation => "train_station",
            PlaceTypes::TransitStation => "transit_station",
            PlaceTypes::TravelAgency => "travel_agency",
            PlaceTypes::University => "university",
            PlaceTypes::VeterinaryCare => "veterinary_care",
            PlaceTypes::Zoo => "zoo",
            PlaceTypes::AdministrativeAreaLevel1 => "administrative_area_level_1",
            PlaceTypes::AdministrativeAreaLevel2 => "administrative_area_level_2",
            PlaceTypes::AdministrativeAreaLevel3 => "administrative_area_level_3",
            PlaceTypes::AdministrativeAreaLevel4 => "administrative_area_level_4",
            PlaceTypes::AdministrativeAreaLevel5 => "administrative_area_level_5",
            PlaceTypes::AdministrativeAreaLevel6 => "administrative_area_level_6",
            PlaceTypes::AdministrativeAreaLevel7 => "administrative_area_level_7",
            PlaceTypes::Archipelago => "archipelago",
            PlaceTypes::ColloquialArea => "colloquial_area",
            PlaceTypes::Continent => "continent",
            PlaceTypes::Country => "country",
            PlaceTypes::Establishment => "establishment",
            PlaceTypes::Finance => "finance",
            PlaceTypes::Floor => "floor",
            PlaceTypes::Food => "food",
            PlaceTypes::GeneralContractor => "general_contractor",
            PlaceTypes::Geocode => "geocode",
            PlaceTypes::Health => "health",
            PlaceTypes::Intersection => "intersection",
            PlaceTypes::Landmark => "landmark",
            PlaceTypes::Locality => "locality",
            PlaceTypes::NaturalFeature => "natural_feature",
            PlaceTypes::Neighborhood => "neighborhood",
            PlaceTypes::PlaceOfWorship => "place_of_worship",
            PlaceTypes::PlusCode => "plus_code",
            PlaceTypes::PointOfInterest => "point_of_interest",
            PlaceTypes::Political => "political",
            PlaceTypes::PostBox => "post_box",
            PlaceTypes::PostalCode => "postal_code",
            PlaceTypes::PostalCodePrefix => "postal_code_prefix",
            PlaceTypes::PostalCodeSuffix => "postal_code_suffix",
            PlaceTypes::PostalTown => "postal_town",
            PlaceTypes::Premise => "premise",
            PlaceTypes::Room => "room",
            PlaceTypes::Route => "route",
            PlaceTypes::StreetAddress => "street_address",
            PlaceTypes::StreetNumber => "street_number",
            PlaceTypes::Sublocality => "sublocality",
            PlaceTypes::SublocalityLevel1 => "sublocality_level_1",
            PlaceTypes::SublocalityLevel2 => "sublocality_level_2",
            PlaceTypes::SublocalityLevel3 => "sublocality_level_3",
            PlaceTypes::SublocalityLevel4 => "sublocality_level_4",
            PlaceTypes::SublocalityLevel5 => "sublocality_level_5",
            PlaceTypes::Subpremise => "subpremise",
            PlaceTypes::TownSquare => "town_square",
            PlaceTypes::Address => "address",
            PlaceTypes::Regions => "(regions)",
            PlaceTypes::Cities => "(cities)",
        }
    }
}


